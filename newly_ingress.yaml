apiVersion: v1
data:
  disable-access-log: "true"
  keep-alive-requests: "10000"
  max-worker-connections: "1000"
  server-tokens: "false"
  ssl-protocols: TLSv1 TLSv1.1 TLSv1.2
  upstream-keepalive-connections: "64"
  worker-shutdown-timeout: 3600s
kind: ConfigMap
metadata:
  name: nginx-ingress-controller-new
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: nginx-ingress-controller-new
    chart: icp-nginx-ingress-3.2.0
    component: nginx-ingress-controller-new
    heritage: Tiller
    k8s-app: icp-nginx-ingress-controller-new
    release: nginx-ingress-new
  name: nginx-ingress-controller-new
  namespace: kube-system
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-ingress-controller-new
      component: nginx-ingress-controller-new
      k8s-app: icp-nginx-ingress-controller-new
      release: nginx-ingress-new
  template:
    metadata:
      annotations:
        productID: icp-nginx-ingress-new_3.2.0_00000
        productName: icp-nginx-ingress-new
        productVersion: 3.2.0
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
        scheduler.alpha.kubernetes.io/critical-pod: ""
      creationTimestamp: null
      labels:
        app: nginx-ingress-controller-new
        component: nginx-ingress-controller-new
        k8s-app: icp-nginx-ingress-controller-new
        release: nginx-ingress-new
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --ingress-class=nginx-new
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller-new
        - --annotations-prefix=ingress.kubernetes.io
        - --enable-ssl-chain-completion
        - --enable-ssl-passthrough=true
        - --publish-status-address=169.56.112.71
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: FIPS_ENABLED
          value: "false"
        image: zcplocal.icp:8500/ibmcom/nginx-ingress-controller:0.23.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx-ingress
        ports:
        - containerPort: 80
          hostPort: 8080
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - sysctl -w net.core.somaxconn=32768; sysctl -w net.ipv4.ip_local_port_range="32768
          65535"
        image: zcplocal.icp:8500/ibmcom/icp-initcontainer:1.0.0-f3
        imagePullPolicy: IfNotPresent
        name: sysctl
        resources: {}
        securityContext:
          privileged: true
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      nodeSelector:
        proxy: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
  templateGeneration: 4
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate